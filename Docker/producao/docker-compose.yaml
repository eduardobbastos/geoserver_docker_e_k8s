volumes:
   geoserver-data:
     name: geoserver-data_example
   geo-db-data:
     name: geo-db-data_example
   geoserver-install-plugin:
     name: geoserver-install-plugin_example

services:
   db:
      image: docker.io/postgis/postgis:${POSTGIS_VERSION_TAG}
      container_name: geoserver_db_example
      volumes:
        - geo-db-data:/var/lib/postgresql
      ports:
        - ${POSTGRES_PORT}:5432
      environment:
        - TZ=America/Sao_Paulo
        - PGTZ=America/Sao_Paulo
        - POSTGRES_DB=${POSTGRES_DB}
        - POSTGRES_USER=${POSTGRES_USER}
        - POSTGRES_PASS=${POSTGRES_PASS}
        - ALLOW_IP_RANGE=${ALLOW_IP_RANGE}
        - FORCE_SSL=TRUE
      restart: on-failure
      healthcheck:
        test: "POSTGRES_PASS=${POSTGRES_PASS} pg_isready -h db -U ${POSTGRES_USER} -d ${POSTGRES_DB}"

   geoserver:
      image: docker.io/kartoza/geoserver:${GS_VERSION}
      container_name: geoserver_app_example
      volumes:
        - geoserver-data:/opt/geoserver/data_dir
        - geoserver-install-plugin:/usr/local/tomcat/webapps/geoserver/WEB-INF/lib/
      ports:
        - ${GEOSERVER_PORT}:8080
        - ${GEOSERVER_PORT_HTTPS}:8443
      restart: on-failure
      environment:
        - TZ=America/Sao_Paulo
        - CATALINA_OPTS=-Duser.timezone=America/Sao_Paulo
        - GEOSERVER_DATA_DIR=${GEOSERVER_DATA_DIR}
        - GEOWEBCACHE_CACHE_DIR=${GEOWEBCACHE_CACHE_DIR}
        - GEOSERVER_ADMIN_PASSWORD=${GEOSERVER_ADMIN_PASSWORD}
        - GEOSERVER_ADMIN_USER=${GEOSERVER_ADMIN_USER}
        - INITIAL_MEMORY=${INITIAL_MEMORY}
        - MAXIMUM_MEMORY=${MAXIMUM_MEMORY}
        - GEOSERVER_CONTEXT_ROOT=${GEOSERVER_CONTEXT_ROOT}
        - SSL=${SSL}
        - HTTP_SCHEME=${HTTP_SCHEME}
        - HTTP_PROXY_NAME=${HTTP_PROXY_NAME}
        - HTTPS_PROXY_NAME=${HTTPS_PROXY_NAME}
        - HTTPS_PROXY_PORT=${HTTPS_PROXY_PORT}
        - JKS_KEY_PASSWORD=${JKS_KEY_PASSWORD}
        - JKS_STORE_PASSWORD=${JKS_STORE_PASSWORD}
        - PKCS12_PASSWORD=${PKCS12_PASSWORD}
        - TOMCAT_EXTRAS=${TOMCAT_EXTRAS}
        - LOGIN_STATUS=${LOGIN_STATUS}
      depends_on:
        db:
          condition: service_healthy
      healthcheck:
         test: ["CMD-SHELL", "curl --max-time 10 -fsS 'http://127.0.0.1:8080/geoserver/ows?service=WPS&version=1.0.0&request=GetCapabilities' || exit 1"]
         interval: 2m
         timeout: 60s
         retries: 3
